#!/bin/bash
set -x

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

MIRROR=${MIRROR:-"http://ftp.gnu.org/gnu"}
# apt-get install nasm qemu texinfo


PREFIX="$DIR/i386elfgcc"
SRC_DIR="$DIR/tmp/src"
TARGET=i386-elf
PATH="$PREFIX/bin:$PATH"


mksrcdir() {
    mkdir -p "$SRC_DIR"
}

install_binutils() {
    cd "$SRC_DIR" || exit

    # binutils
    BINUTILS_VERSION=2.45
    curl -O $MIRROR/binutils/binutils-$BINUTILS_VERSION.tar.gz # If the link 404's, look for a more recent version
    tar xzf binutils-$BINUTILS_VERSION.tar.gz
    mkdir binutils-build
    cd binutils-build || exit
    $SRC_DIR/binutils-$BINUTILS_VERSION/configure --target=$TARGET --with-sysroot --disable-nls --disable-werror --prefix=$PREFIX 2>&1 | tee configure.log
    make -j3
    make -j3 install

    cd ..
}


install_gcc() {
    cd "$SRC_DIR" || exit

    # gcc
    GCC_VERSION=15.2.0
    curl -O $MIRROR/gcc/gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.gz
    tar xzf gcc-$GCC_VERSION.tar.gz
    cd gcc-$GCC_VERSION || exit
    ./contrib/download_prerequisites
    cd ..
    mkdir gcc-build
    cd gcc-build || exit
    $SRC_DIR/gcc-$GCC_VERSION/configure --target=$TARGET --prefix="$PREFIX" --disable-nls --disable-libssp --enable-languages=c --without-headers
    make -j3 all-gcc
    make -j3 all-target-libgcc
    make -j3 install-gcc
    make -j3 install-target-libgcc
    cd ..
}

install_gdb() {
    cd "$SRC_DIR" || exit

    # gdb
    GDB_VERSION=15.2
    curl -O $MIRROR/gdb/gdb-$GDB_VERSION.tar.gz
    tar xzf gdb-$GDB_VERSION.tar.gz
    mkdir gdb-build
    cd gdb-build || exit
    $SRC_DIR/gdb-$GDB_VERSION/configure --target="$TARGET" --prefix="$PREFIX" --program-prefix=i386-elf- --disable-werror
    make -j3 all-gdb
    make -j3 install-gdb

    cd ..
}

cleanup() {
    rm -rf "$SRC_DIR"
}

mksrcdir

if [[ -n $1 ]]; then
    case $1 in
        binutils)
            install_binutils
            ;;
        gcc)
            install_gcc
            ;;
        gdb)
            install_gdb
            ;;
        all)
            install_binutils
            install_gcc
            install_gdb
            ;;
        clean)
            cleanup
            ;;
        *)
            echo "Unknown option: $1"
            echo "Usage: $0 {binutils|gcc|gdb|all|clean}"
            exit 1
            ;;
    esac
else
    echo "Usage: $0 {binutils|gcc|gdb|all|clean}"
    exit 1
fi